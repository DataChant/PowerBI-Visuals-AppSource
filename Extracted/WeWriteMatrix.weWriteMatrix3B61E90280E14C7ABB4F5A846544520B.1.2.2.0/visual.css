/*
! tailwindcss v3.2.4 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
*/

html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  /* 3 */
  tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.collapse {
  visibility: collapse;
}

.static {
  position: static;
}

.absolute {
  position: absolute;
}

.top-0 {
  top: 0px;
}

.z-50 {
  z-index: 50;
}

.z-10 {
  z-index: 10;
}

.m-0\.5 {
  margin: 0.125rem;
}

.m-0 {
  margin: 0px;
}

.-mx-1\.5 {
  margin-left: -0.375rem;
  margin-right: -0.375rem;
}

.-my-1\.5 {
  margin-top: -0.375rem;
  margin-bottom: -0.375rem;
}

.-mx-1 {
  margin-left: -0.25rem;
  margin-right: -0.25rem;
}

.-my-1 {
  margin-top: -0.25rem;
  margin-bottom: -0.25rem;
}

.mx-px {
  margin-left: 1px;
  margin-right: 1px;
}

.mx-2 {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}

.mb-2 {
  margin-bottom: 0.5rem;
}

.ml-auto {
  margin-left: auto;
}

.ml-3 {
  margin-left: 0.75rem;
}

.mr-px {
  margin-right: 1px;
}

.mr-2 {
  margin-right: 0.5rem;
}

.mb-4 {
  margin-bottom: 1rem;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.table {
  display: table;
}

.hidden {
  display: none;
}

.h-5 {
  height: 1.25rem;
}

.h-8 {
  height: 2rem;
}

.h-screen {
  height: 100vh;
}

.h-4 {
  height: 1rem;
}

.h-6 {
  height: 1.5rem;
}

.min-h-screen {
  min-height: 100vh;
}

.w-36 {
  width: 9rem;
}

.w-5 {
  width: 1.25rem;
}

.w-8 {
  width: 2rem;
}

.w-full {
  width: 100%;
}

.w-4 {
  width: 1rem;
}

.w-6 {
  width: 1.5rem;
}

.flex-1 {
  flex: 1 1 0%;
}

.flex-shrink-0 {
  flex-shrink: 0;
}

.cursor-not-allowed {
  cursor: not-allowed;
}

.flex-col {
  flex-direction: column;
}

.items-center {
  align-items: center;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.overflow-auto {
  overflow: auto;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.rounded-md {
  border-radius: 0.375rem;
}

.rounded-l-md {
  border-top-left-radius: 0.375rem;
  border-bottom-left-radius: 0.375rem;
}

.rounded-r-md {
  border-top-right-radius: 0.375rem;
  border-bottom-right-radius: 0.375rem;
}

.bg-orange-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(255 237 213 / var(--tw-bg-opacity));
}

.bg-red-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(254 226 226 / var(--tw-bg-opacity));
}

.bg-green-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(220 252 231 / var(--tw-bg-opacity));
}

.bg-solved-gray-300 {
  --tw-bg-opacity: 1;
  background-color: rgb(239 239 239 / var(--tw-bg-opacity));
}

.bg-gray-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}

.bg-blue-800 {
  --tw-bg-opacity: 1;
  background-color: rgb(30 64 175 / var(--tw-bg-opacity));
}

.bg-teal-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(20 184 166 / var(--tw-bg-opacity));
}

.p-4 {
  padding: 1rem;
}

.p-1\.5 {
  padding: 0.375rem;
}

.p-1 {
  padding: 0.25rem;
}

.py-px {
  padding-top: 1px;
  padding-bottom: 1px;
}

.px-1 {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.text-center {
  text-align: center;
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.font-medium {
  font-weight: 500;
}

.font-bold {
  font-weight: 700;
}

.text-orange-700 {
  --tw-text-opacity: 1;
  color: rgb(194 65 12 / var(--tw-text-opacity));
}

.text-orange-500 {
  --tw-text-opacity: 1;
  color: rgb(249 115 22 / var(--tw-text-opacity));
}

.text-red-700 {
  --tw-text-opacity: 1;
  color: rgb(185 28 28 / var(--tw-text-opacity));
}

.text-red-500 {
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / var(--tw-text-opacity));
}

.text-green-700 {
  --tw-text-opacity: 1;
  color: rgb(21 128 61 / var(--tw-text-opacity));
}

.text-green-500 {
  --tw-text-opacity: 1;
  color: rgb(34 197 94 / var(--tw-text-opacity));
}

.text-green-200 {
  --tw-text-opacity: 1;
  color: rgb(187 247 208 / var(--tw-text-opacity));
}

.text-green-100 {
  --tw-text-opacity: 1;
  color: rgb(220 252 231 / var(--tw-text-opacity));
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.opacity-30 {
  opacity: 0.3;
}

.opacity-75 {
  opacity: 0.75;
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.hover\:bg-orange-200:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(254 215 170 / var(--tw-bg-opacity));
}

.hover\:bg-red-200:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(254 202 202 / var(--tw-bg-opacity));
}

.hover\:bg-green-200:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(187 247 208 / var(--tw-bg-opacity));
}

.hover\:bg-solved-gray-400:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(210 210 210 / var(--tw-bg-opacity));
}

.focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.focus\:ring-2:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-orange-400:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(251 146 60 / var(--tw-ring-opacity));
}

.focus\:ring-red-400:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(248 113 113 / var(--tw-ring-opacity));
}

.focus\:ring-green-400:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(74 222 128 / var(--tw-ring-opacity));
}

.active\:bg-solved-gray-500:active {
  --tw-bg-opacity: 1;
  background-color: rgb(170 170 170 / var(--tw-bg-opacity));
}

@media (prefers-color-scheme: dark) {
  .dark\:bg-orange-200 {
    --tw-bg-opacity: 1;
    background-color: rgb(254 215 170 / var(--tw-bg-opacity));
  }

  .dark\:bg-red-200 {
    --tw-bg-opacity: 1;
    background-color: rgb(254 202 202 / var(--tw-bg-opacity));
  }

  .dark\:bg-green-200 {
    --tw-bg-opacity: 1;
    background-color: rgb(187 247 208 / var(--tw-bg-opacity));
  }

  .dark\:text-orange-800 {
    --tw-text-opacity: 1;
    color: rgb(154 52 18 / var(--tw-text-opacity));
  }

  .dark\:text-orange-600 {
    --tw-text-opacity: 1;
    color: rgb(234 88 12 / var(--tw-text-opacity));
  }

  .dark\:text-red-800 {
    --tw-text-opacity: 1;
    color: rgb(153 27 27 / var(--tw-text-opacity));
  }

  .dark\:text-red-600 {
    --tw-text-opacity: 1;
    color: rgb(220 38 38 / var(--tw-text-opacity));
  }

  .dark\:text-green-800 {
    --tw-text-opacity: 1;
    color: rgb(22 101 52 / var(--tw-text-opacity));
  }

  .dark\:text-green-600 {
    --tw-text-opacity: 1;
    color: rgb(22 163 74 / var(--tw-text-opacity));
  }

  .dark\:hover\:bg-orange-300:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(253 186 116 / var(--tw-bg-opacity));
  }

  .dark\:hover\:bg-red-300:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(252 165 165 / var(--tw-bg-opacity));
  }

  .dark\:hover\:bg-green-300:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(134 239 172 / var(--tw-bg-opacity));
  }
}

.text-green-100 {
  --tw-bg-opacity: 1;
  color: var(--main-color) !important;
  opacity: var(--tw-bg-opacity);
}

.text-green-200 {
  --tw-bg-opacity: 0.5;
  color: var(--main-color) !important;
  opacity: var(--tw-bg-opacity);
}
@charset "UTF-8";
.rg-celleditor-input, .rg-celleditor input {
  width: 100%;
  height: 100%;
  padding: 0;
  margin: 0;
  background: transparent;
  font-size: 1em;
  outline: none; }

.rg-celleditor {
  box-sizing: border-box;
  z-index: 5;
  background-color: #ffffff;
  box-shadow: 1px 1px 6px rgba(0, 0, 0, 0.06);
  display: flex;
  border-style: solid;
  border-color: #3579f8;
  border-width: 2px;
  padding: 0 4px; }

.rg-number-celleditor input {
  text-align: right; }

.reactgrid-content .rg-pane .rg-cell.rg-number-cell,
.reactgrid-content .rg-pane .rg-cell .rg-time-cell,
.reactgrid-content .rg-pane .rg-cell .rg-date-cell {
  justify-content: flex-end; }

.reactgrid-content .rg-pane .rg-cell.rg-email-cell.invalid {
  color: red; }

.reactgrid-content .rg-pane .rg-cell.rg-text-cell.placeholder {
  color: #999;
  font-size: 0.8em; }

.reactgrid-content .rg-pane .rg-cell.rg-checkbox-cell {
  align-items: center;
  justify-content: center;
  padding: 0;
  margin: 0;
  background: transparent;
  pointer-events: auto; }
  .reactgrid-content .rg-pane .rg-cell.rg-checkbox-cell input {
    width: 20px;
    height: 20px; }

.reactgrid-content .rg-pane .rg-cell.rg-chevron-cell .chevron {
  pointer-events: auto;
  display: flex;
  justify-content: center;
  align-items: center;
  font-weight: bold;
  margin-right: 0.1em;
  cursor: pointer;
  transition: 200ms all ease-in-out;
  height: 1em;
  width: 1em; }

.reactgrid-content .rg-pane .rg-cell.rg-chevron-cell .no-child {
  width: 0.5em; }

.reactgrid-content .rg-pane .rg-cell.rg-chevron-cell.expanded .chevron {
  transform: rotate(90deg); }

.reactgrid-content .rg-pane .rg-cell.rg-chevron-cell.collapsed .chevron {
  transform: rotate(0deg); }

.reactgrid-content .rg-pane .rg-cell.rg-checkbox-cell {
  justify-content: center; }
  .reactgrid-content .rg-pane .rg-cell.rg-checkbox-cell label {
    position: relative;
    height: 18px;
    width: 18px;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    margin: 0; }
  .reactgrid-content .rg-pane .rg-cell.rg-checkbox-cell label input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    margin: 0;
    height: 18px;
    width: 18px; }
  .reactgrid-content .rg-pane .rg-cell.rg-checkbox-cell span {
    position: absolute;
    top: 0;
    left: 0;
    height: 18px;
    width: 18px;
    background-color: #eeeeee; }
  .reactgrid-content .rg-pane .rg-cell.rg-checkbox-cell label:hover input ~ span {
    background-color: #cccccc; }
  .reactgrid-content .rg-pane .rg-cell.rg-checkbox-cell label input:checked ~ span {
    background-color: #3579f8; }
  .reactgrid-content .rg-pane .rg-cell.rg-checkbox-cell span:after {
    content: "";
    position: absolute;
    display: none; }
  .reactgrid-content .rg-pane .rg-cell.rg-checkbox-cell label input:checked ~ span:after {
    display: block; }
  .reactgrid-content .rg-pane .rg-cell.rg-checkbox-cell label span:after {
    left: 5px;
    top: 0px;
    width: 4px;
    height: 12px;
    border: solid #ffffff;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg); }

.reactgrid-content .rg-pane .rg-cell.rg-dropdown-cell {
  padding: 0;
  overflow: visible; }
  .reactgrid-content .rg-pane .rg-cell.rg-dropdown-cell .rg-dropdown-menu {
    top: 100%;
    background-color: #ffffff;
    border-radius: 4px;
    box-shadow: 0px 0px 7px rgba(0, 0, 0, 0.5);
    margin-bottom: 8px;
    margin-top: 2px;
    position: absolute;
    width: 100%;
    z-index: 1;
    box-sizing: border-box; }
  .reactgrid-content .rg-pane .rg-cell.rg-dropdown-cell .rg-dropdown-option {
    padding: 0.3em 0.5em;
    min-height: 1.5em;
    display: flex;
    align-items: center; }
    .reactgrid-content .rg-pane .rg-cell.rg-dropdown-cell .rg-dropdown-option.selected::before {
      content: "✓";
      padding-right: 0.2em; }
    .reactgrid-content .rg-pane .rg-cell.rg-dropdown-cell .rg-dropdown-option.focused {
      color: black;
      background-color: #e2ebfe; }

[contenteditable] {
  -webkit-user-select: text;
  user-select: text; }

.reactgrid-content {
  user-select: none;
  -moz-user-select: none;
  -webkit-user-select: none;
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-items: flex-start; }
  .reactgrid-content .rg-pane.rg-pane-top, .reactgrid-content .rg-pane.rg-pane-bottom, .reactgrid-content .rg-pane.rg-pane-left, .reactgrid-content .rg-pane.rg-pane-right {
    position: sticky;
    position: -webkit-sticky;
    background-color: #ffffff; }
  .reactgrid-content .rg-pane.rg-pane-top {
    top: 0; }
  .reactgrid-content .rg-pane.rg-pane-bottom {
    bottom: 0; }
  .reactgrid-content .rg-pane.rg-pane-left {
    left: 0; }
  .reactgrid-content .rg-pane.rg-pane-right {
    right: 0; }
  .reactgrid-content .rg-pane .rg-cell {
    font-size: 1em;
    box-sizing: border-box;
    white-space: nowrap;
    position: absolute;
    display: flex;
    flex-direction: row;
    align-items: center;
    overflow: hidden;
    padding: 0 4px;
    outline: none;
    touch-action: auto;
    border-color: #e8e8e8; }
    .reactgrid-content .rg-pane .rg-cell .rg-touch-resize-handle {
      position: absolute;
      top: 0;
      right: 0;
      width: 11px;
      height: 100%;
      pointer-events: auto; }
      .reactgrid-content .rg-pane .rg-cell .rg-touch-resize-handle .rg-resize-handle {
        position: absolute;
        right: 0;
        width: 6px;
        height: 100%; }
        .reactgrid-content .rg-pane .rg-cell .rg-touch-resize-handle .rg-resize-handle:hover {
          cursor: col-resize;
          background-color: #3579f8; }
    .reactgrid-content .rg-pane .rg-cell .rg-groupId {
      font-size: 0.8em;
      position: absolute;
      right: 4px;
      top: 4px; }
  .reactgrid-content .rg-pane .rg-cell-focus,
  .reactgrid-content .rg-pane .rg-cell-highlight {
    position: absolute;
    pointer-events: none;
    box-sizing: border-box;
    border-style: solid;
    border-width: 2px;
    border-color: #3579f8; }
  .reactgrid-content .rg-pane .rg-touch-fill-handle {
    position: absolute;
    width: 40px;
    height: 40px;
    background-color: rgba(255, 255, 255, 0.01);
    touch-action: none;
    pointer-events: auto; }
    .reactgrid-content .rg-pane .rg-touch-fill-handle .rg-fill-handle {
      position: absolute;
      cursor: crosshair;
      top: 50%;
      left: 50%;
      transform: translate(calc(-50% - (1px/ 2)), calc(-50% - (1px/ 2)));
      width: 6.5px;
      height: 6.5px;
      background-color: #3579f8;
      border-width: 1px;
      border-style: solid;
      border-color: #ffffff;
      background-clip: content-box; }
  .reactgrid-content .rg-pane .rg-partial-area {
    position: absolute;
    pointer-events: none;
    box-sizing: border-box; }
    .reactgrid-content .rg-pane .rg-partial-area.rg-partial-area-part {
      border-width: 1px;
      border-style: dashed;
      border-color: #000000; }
    .reactgrid-content .rg-pane .rg-partial-area.rg-partial-area-selected-range {
      border-width: 1px;
      border-style: solid;
      border-color: #3579f8;
      background-color: rgba(53, 121, 248, 0.35); }
  .reactgrid-content .rg-pane-shadow {
    position: sticky; }
    .reactgrid-content .rg-pane-shadow.shadow-top {
      pointer-events: none;
      top: 0;
      box-shadow: 2px 2px 3px 1px rgba(0, 0, 0, 0.06); }
    .reactgrid-content .rg-pane-shadow.shadow-left {
      pointer-events: none;
      left: 0;
      box-shadow: 5px 0 3px -2px rgba(0, 0, 0, 0.06); }
    .reactgrid-content .rg-pane-shadow.shadow-bottom {
      pointer-events: none;
      bottom: 0;
      box-shadow: 2px -1px 3px 1px rgba(0, 0, 0, 0.06); }
    .reactgrid-content .rg-pane-shadow.shadow-right {
      pointer-events: none;
      right: 0;
      box-shadow: -5px 0 3px -2px rgba(0, 0, 0, 0.06); }
    .reactgrid-content .rg-pane-shadow.shadow-top-left-corner {
      box-shadow: 2px 3px 3px 1px rgba(0, 0, 0, 0.06); }
    .reactgrid-content .rg-pane-shadow.shadow-top-right-corner {
      box-shadow: -2px 2px 3px 1px rgba(0, 0, 0, 0.06); }
    .reactgrid-content .rg-pane-shadow.shadow-bottom-left-corner {
      box-shadow: 2px -2px 3px 1px rgba(0, 0, 0, 0.06); }
    .reactgrid-content .rg-pane-shadow.shadow-bottom-right-corner {
      box-shadow: -2px -2px 3px 1px rgba(0, 0, 0, 0.06); }
  .reactgrid-content .rg-context-menu {
    position: fixed;
    z-index: 1000;
    background-color: #ffffff;
    font-size: 1em;
    box-shadow: 0px 0px 8px 2px rgba(0, 0, 0, 0.06); }
    .reactgrid-content .rg-context-menu .rg-context-menu-option {
      padding: 8px 20px 8px 15px;
      cursor: pointer; }
      .reactgrid-content .rg-context-menu .rg-context-menu-option:hover {
        background-color: #f2f2f2; }
  .reactgrid-content .rg-shadow {
    position: absolute;
    background-color: #000000;
    opacity: 0.1;
    z-index: 4; }
  .reactgrid-content .rg-column-resize-hint {
    background-color: #74b9ff;
    position: absolute;
    padding: 5px;
    border-radius: 0 5px 5px 0; }
  .reactgrid-content .rg-line {
    position: absolute;
    background-color: #74b9ff;
    z-index: 4; }
    .reactgrid-content .rg-line-horizontal {
      left: 0;
      height: 2px; }
    .reactgrid-content .rg-line-vertical {
      top: 0;
      width: 2px; }
  .reactgrid-content .rg-hidden-element {
    border: 0;
    padding: 0;
    margin: 0;
    position: fixed;
    width: 1px;
    height: 1px;
    opacity: 0;
    top: 50%;
    left: 50%; }

@charset "UTF-8";
:root {
  --main-color: #3c8275;
  --second-color: #ffffff;
  --header-background-color: #ffffff;
  --cell-editor-border-color: var(--main-color);
  --selected-bakcground-color: #3c8275;
  --cell-editor-background-color: rgba(36, 78, 71, 0.2);
  --cell-background-color: #e8e8e8;
  --cell-border-color: #e8e8e8;
  --editor-color: var(--main-color);
}
.rg-pane-top.rg-pane-left {
  z-index: 40 !important;
}
.rg-pane-top {
  z-index: 39 !important;
}
.rg-pane-left {
  z-index: 38 !important;
}
.reactgrid-content .rg-context-menu .rg-context-menu-option {
  padding: 2px 15px 2px 15px !important;
}
/* Applied only if more than 1 heder row and only to the first one */
.reactgrid .reactgrid-content .rg-pane:has(.rg-header-cell[data-cell-rowidx="1"]) .rg-header-cell[data-cell-rowidx="0"] {
  overflow: unset !important;
}
.reactgrid .reactgrid-content .rg-pane .rg-cell .rg-touch-resize-handle {
  height: 1000% !important;
  z-index: 10 !important;
}
.reactgrid-content .rg-pane.rg-pane-top {
  overflow: hidden !important;
}
.total-cell {
  font-weight: var(--totals-font-weight) !important;
}
.rg-cell-nonEditable {
  background-color: var(--noneditable-color) !important;
}
.reactgrid-content .rg-pane .rg-cell {
  font-family: var(--font-family);
  font-size: var(--font-size);
  font-weight: var(--font-weight);
  font-style: var(--font-style);
  text-decoration: var(--text-decoration);
  color: var(--text-color);
  background: var(--cell-background-color);
}
.rg-celleditor-input,
.rg-celleditor input {
  font-family: var(--font-family);
  font-size: var(--font-size);
  font-weight: var(--font-weight);
  font-style: var(--font-style);
  text-decoration: var(--text-decoration);
  color: var(--text-color);
}
.rg-celleditor-input,
.rg-celleditor input {
  width: 100%;
  height: 100%;
  padding: 0;
  margin: 0;
  background: transparent;
  outline: none;
}
.rg-celleditor {
  box-sizing: border-box;
  /*z-index: 1;*/
  background-color: var(--cell-background-color);
  /*box-shadow: 1px 1px 6px rgba(0, 0, 0, 0.06);*/
  display: flex;
  border-style: solid;
  border-color: var(--cell-editor-border-color);
  border-width: 2px;
  padding: 0 4px;
}
.rg-number-celleditor input {
  text-align: right;
}
.reactgrid-content .rg-pane .rg-cell.rg-number-cell,
.reactgrid-content .rg-pane .rg-cell .rg-time-cell,
.reactgrid-content .rg-pane .rg-cell .rg-date-cell {
  justify-content: flex-end;
}
.reactgrid-content .rg-pane .rg-cell.rg-email-cell.invalid {
  color: red;
}
.reactgrid-content .rg-pane .rg-cell.rg-text-cell.placeholder {
  color: #999;
  font-size: 0.8em;
}
.reactgrid-content .rg-pane .rg-cell.rg-checkbox-cell {
  align-items: center;
  justify-content: center;
  padding: 0;
  margin: 0;
  background: transparent;
  pointer-events: auto;
}
.reactgrid-content .rg-pane .rg-cell.rg-checkbox-cell input {
  width: 20px;
  height: 20px;
}
.reactgrid-content .rg-pane .rg-cell.rg-chevron-cell .chevron {
  pointer-events: auto;
  display: flex;
  justify-content: center;
  align-items: center;
  font-weight: bold;
  margin-right: 0.1em;
  cursor: pointer;
  transition: 200ms all ease-in-out;
  height: 1em;
  width: 1em;
}
.reactgrid-content .rg-pane .rg-cell.rg-chevron-cell .no-child {
  width: 0.5em;
}
.reactgrid-content .rg-pane .rg-cell.rg-chevron-cell.expanded .chevron {
  transform: rotate(90deg);
}
.reactgrid-content .rg-pane .rg-cell.rg-chevron-cell.collapsed .chevron {
  transform: rotate(0deg);
}
.reactgrid-content .rg-pane .rg-cell.rg-checkbox-cell {
  justify-content: center;
}
.reactgrid-content .rg-pane .rg-cell.rg-checkbox-cell label {
  position: relative;
  height: 18px;
  width: 18px;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  margin: 0;
}
.reactgrid-content .rg-pane .rg-cell.rg-checkbox-cell label input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  margin: 0;
  height: 18px;
  width: 18px;
}
.reactgrid-content .rg-pane .rg-cell.rg-checkbox-cell span {
  position: absolute;
  top: 0;
  left: 0;
  height: 18px;
  width: 18px;
  background-color: var(--second-color);
}
.reactgrid-content .rg-pane .rg-cell.rg-checkbox-cell label:hover input ~ span {
  background-color: #cccccc;
}
.reactgrid-content .rg-pane .rg-cell.rg-checkbox-cell label input:checked ~ span {
  background-color: var(--cell-editor-border-color);
}
.reactgrid-content .rg-pane .rg-cell.rg-checkbox-cell span:after {
  content: "";
  position: absolute;
  display: none;
}
.reactgrid-content .rg-pane .rg-cell.rg-checkbox-cell label input:checked ~ span:after {
  display: block;
}
.reactgrid-content .rg-pane .rg-cell.rg-checkbox-cell label span:after {
  left: 5px;
  top: 0px;
  width: 4px;
  height: 12px;
  border: solid var(--second-color);
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}
.reactgrid-content .rg-pane .rg-cell.rg-dropdown-cell {
  padding: 0;
  overflow: visible;
}
.reactgrid-content .rg-pane .rg-cell.rg-dropdown-cell .rg-dropdown-menu {
  top: 100%;
  background-color: var(--second-color);
  border-radius: 4px;
  /*box-shadow: 0px 0px 7px rgba(0, 0, 0, 0.5);*/
  margin-bottom: 8px;
  margin-top: 2px;
  position: absolute;
  width: 100%;
  z-index: 1;
  box-sizing: border-box;
}
.reactgrid-content .rg-pane .rg-cell.rg-dropdown-cell .rg-dropdown-option {
  padding: 0.3em 0.5em;
  min-height: 1.5em;
  display: flex;
  align-items: center;
}
.reactgrid-content .rg-pane .rg-cell.rg-dropdown-cell .rg-dropdown-option.selected::before {
  content: "✓";
  padding-right: 0.2em;
}
.reactgrid-content .rg-pane .rg-cell.rg-dropdown-cell .rg-dropdown-option.focused {
  color: black;
  background-color: #e2ebfe;
}
[contenteditable] {
  -webkit-user-select: text;
  user-select: text;
}
.reactgrid-content {
  user-select: none;
  -moz-user-select: none;
  -webkit-user-select: none;
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-items: flex-start;
}
.reactgrid-content .rg-pane.rg-pane-top,
.reactgrid-content .rg-pane.rg-pane-bottom,
.reactgrid-content .rg-pane.rg-pane-left,
.reactgrid-content .rg-pane.rg-pane-right {
  position: sticky;
  position: -webkit-sticky;
  background-color: var(--header-background-color);
}
.reactgrid-content .rg-pane.rg-pane-top {
  top: 0;
}
.reactgrid-content .rg-pane.rg-pane-bottom {
  bottom: 0;
}
.reactgrid-content .rg-pane.rg-pane-left {
  left: 0;
}
.reactgrid-content .rg-pane.rg-pane-right {
  right: 0;
}
.reactgrid-content .rg-pane .rg-cell {
  box-sizing: border-box;
  white-space: nowrap;
  position: absolute;
  display: flex;
  flex-direction: row;
  align-items: center;
  overflow: hidden;
  padding: 0 4px;
  outline: none;
  touch-action: auto;
  border-color: var(--cell-border-color);
}
.reactgrid-content .rg-pane .rg-cell .rg-touch-resize-handle {
  position: absolute;
  top: 0;
  right: 0;
  width: 11px;
  height: 100%;
  pointer-events: auto;
}
.reactgrid-content .rg-pane .rg-cell .rg-touch-resize-handle .rg-resize-handle {
  position: absolute;
  right: 0;
  width: 6px;
  height: 100%;
}
.reactgrid-content .rg-pane .rg-cell .rg-touch-resize-handle .rg-resize-handle:hover {
  cursor: col-resize;
  background-color: var(--cell-editor-border-color);
}
.reactgrid-content .rg-pane .rg-cell .rg-groupId {
  font-size: 0.8em;
  position: absolute;
  right: 4px;
  top: 4px;
}
.reactgrid-content .rg-pane .rg-cell-focus,
.reactgrid-content .rg-pane .rg-cell-highlight {
  position: absolute;
  pointer-events: none;
  box-sizing: border-box;
  border-style: solid;
  border-width: 2px;
  border-color: var(--cell-editor-border-color);
}
.reactgrid-content .rg-pane .rg-touch-fill-handle {
  position: absolute;
  width: 40px;
  height: 40px;
  background-color: rgba(255, 255, 255, 0.01);
  touch-action: none;
  pointer-events: auto;
}
.reactgrid-content .rg-pane .rg-touch-fill-handle .rg-fill-handle {
  position: absolute;
  cursor: crosshair;
  top: 50%;
  left: 50%;
  transform: translate(calc(-50% - (1px/2)), calc(-50% - (1px/2)));
  width: 6.5px;
  height: 6.5px;
  background-color: var(--cell-editor-border-color);
  border-width: 1px;
  border-style: solid;
  border-color: var(--second-color);
  background-clip: content-box;
}
.reactgrid-content .rg-pane .rg-partial-area {
  position: absolute;
  pointer-events: none;
  box-sizing: border-box;
}
.reactgrid-content .rg-pane .rg-partial-area.rg-partial-area-part {
  border-width: 1px;
  border-style: dashed;
  border-color: #000000;
}
.reactgrid-content .rg-pane .rg-partial-area.rg-partial-area-selected-range {
  border-width: 1px;
  border-style: solid;
  border-color: var(--cell-editor-border-color);
  background-color: var(--cell-editor-background-color);
}
.reactgrid-content .rg-context-menu {
  position: fixed;
  z-index: 1000;
  background-color: var(--second-color);
  font-size: 1em;
  box-shadow: 0px 0px 8px 2px rgba(0, 0, 0, 0.06);
}
.reactgrid-content .rg-context-menu .rg-context-menu-option {
  padding: 8px 20px 8px 15px;
  cursor: pointer;
}
.reactgrid-content .rg-context-menu .rg-context-menu-option:hover {
  background-color: var(--second-color);
}
.reactgrid-content .rg-shadow {
  position: absolute;
  background-color: #000000;
  opacity: 0.1;
  z-index: 4;
}
.reactgrid-content .rg-column-resize-hint {
  background-color: var(--selected-background-color);
  position: absolute;
  padding: 5px;
  border-radius: 0 5px 5px 0;
}
.reactgrid-content .rg-line {
  position: absolute;
  background-color: var(--selected-background-color);
  z-index: 4;
}
.reactgrid-content .rg-line-horizontal {
  left: 0;
  height: 2px;
}
.reactgrid-content .rg-line-vertical {
  top: 0;
  width: 2px;
}
.reactgrid-content .rg-hidden-element {
  border: 0;
  padding: 0;
  margin: 0;
  position: fixed;
  width: 1px;
  height: 1px;
  opacity: 0;
  top: 50%;
  left: 50%;
}
.rg-cell-highlight {
  background-color: rgba(181, 181, 181, 0.24) !important;
}
/* TODO: Set it if there is more than one item in context menu
.reactgrid-content .rg-context-menu {
  overflow-y: auto;
  bottom: 0px;
  max-height: 140px;
}
*/

